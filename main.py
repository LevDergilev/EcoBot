import telebot
import requests
import random
import os
from bs4 import BeautifulSoup
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from tokenid import token

bot = telebot.TeleBot(token)

# –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π —Å –æ—Ç–≤–µ—Ç–∞–º–∏ –Ω–∞ —á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã
KNOWLEDGE_BASE = {
    # –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–Ω—è—Ç–∏—è
    "–≥–ª–æ–±–∞–ª—å–Ω–æ–µ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏–µ": {
        "source": "–ì–ª–æ–±–∞–ª—å–Ω–æ–µ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏–µ",
        "custom_answer": None
    },
    "—ç–∫–æ–ª–æ–≥–∏—è": {
        "source": "–≠–∫–æ–ª–æ–≥–∏—è",
        "custom_answer": None
    },
    "–ø–∞—Ä–Ω–∏–∫–æ–≤—ã–π —ç—Ñ—Ñ–µ–∫—Ç": {
        "source": "–ü–∞—Ä–Ω–∏–∫–æ–≤—ã–π —ç—Ñ—Ñ–µ–∫—Ç",
        "custom_answer": None
    },
    "–∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–ª–∏–º–∞—Ç–∞": {
        "source": "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–ª–∏–º–∞—Ç–∞",
        "custom_answer": None
    },
    
    # –ü—Ä–∏—á–∏–Ω—ã –∏ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è
    "–ø—Ä–∏—á–∏–Ω—ã –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏—è": {
        "custom_answer": """–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏—è:
1. –°–∂–∏–≥–∞–Ω–∏–µ –∏—Å–∫–æ–ø–∞–µ–º–æ–≥–æ —Ç–æ–ø–ª–∏–≤–∞ (—É–≥–æ–ª—å, –Ω–µ—Ñ—Ç—å, –≥–∞–∑)
2. –í—ã—Ä—É–±–∫–∞ –ª–µ—Å–æ–≤ (–¥–µ—Ä–µ–≤—å—è –ø–æ–≥–ª–æ—â–∞—é—Ç CO‚ÇÇ)
3. –ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–µ –≤—ã–±—Ä–æ—Å—ã
4. –ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–≤–æ–¥—Å—Ç–≤–æ
5. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ—Ä–µ–æ–Ω–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö —Ö–∏–º–∏—á–µ—Å–∫–∏—Ö –≤–µ—â–µ—Å—Ç–≤"""
    },
    "–∫–∞–∫–∏–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏—è": {
        "custom_answer": """–í–æ–∑–º–æ–∂–Ω—ã–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è:
üå° –ü–æ–≤—ã—à–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–µ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –Ω–∞ –ø–ª–∞–Ω–µ—Ç–µ
üåä –¢–∞—è–Ω–∏–µ –ª–µ–¥–Ω–∏–∫–æ–≤ –∏ –ø–æ–≤—ã—à–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –º–æ—Ä—è
üî• –£—á–∞—â–µ–Ω–∏–µ —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã—Ö –ø–æ–≥–æ–¥–Ω—ã—Ö —è–≤–ª–µ–Ω–∏–π
üåç –ò–∑–º–µ–Ω–µ–Ω–∏–µ —ç–∫–æ—Å–∏—Å—Ç–µ–º –∏ –≤—ã–º–∏—Ä–∞–Ω–∏–µ –≤–∏–¥–æ–≤
üçÉ –£—Ö—É–¥—à–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ –≤–æ–∑–¥—É—Ö–∞
üåæ –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ–ª—å—Å–∫–∏–º —Ö–æ–∑—è–π—Å—Ç–≤–æ–º"""
    },
    
    # –†–µ—à–µ–Ω–∏—è –∏ —É–ª—É—á—à–µ–Ω–∏—è
    "–∫–∞–∫ —É–ª—É—á—à–∏—Ç—å —ç–∫–æ–ª–æ–≥–∏—é": {
        "custom_answer": """–°–ø–æ—Å–æ–±—ã —É–ª—É—á—à–µ–Ω–∏—è —ç–∫–æ–ª–æ–≥–∏–∏:
1. ‚ôªÔ∏è –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∏ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∞ –º—É—Å–æ—Ä–∞
2. üí° –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç–Ω–µ—Ä–≥–æ—Å–±–µ—Ä–µ–≥–∞—é—â–∏—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π
3. üå± –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º–æ–π —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∏
4. üö∂ –ü–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏–µ –ø–µ—à–∫–æ–º –∏–ª–∏ –Ω–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–µ
5. üõí –û—Å–æ–∑–Ω–∞–Ω–Ω–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ"""
    },
    "–∫–∞–∫ –±–æ—Ä–æ—Ç—å—Å—è —Å –≥–ª–æ–±–∞–ª—å–Ω—ã–º –ø–æ—Ç–µ–ø–ª–µ–Ω–∏–µ–º": {
        "custom_answer": """–ú–µ—Ä—ã –±–æ—Ä—å–±—ã:
‚Ä¢ –°–æ–∫—Ä–∞—â–µ–Ω–∏–µ –≤—ã–±—Ä–æ—Å–æ–≤ CO‚ÇÇ
‚Ä¢ –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –í–ò–≠ (—Å–æ–ª–Ω–µ—á–Ω–∞—è, –≤–µ—Ç—Ä–æ–≤–∞—è —ç–Ω–µ—Ä–≥–∏—è)
‚Ä¢ –≠–Ω–µ—Ä–≥–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–µ—Å–æ–≤
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤"""
    },
    
    # –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
    "—á—Ç–æ —Ç–∞–∫–æ–µ —É–≥–ª–µ—Ä–æ–¥–Ω—ã–π —Å–ª–µ–¥": {
        "source": "–£–≥–ª–µ—Ä–æ–¥–Ω—ã–π —Å–ª–µ–¥",
        "custom_answer": None
    },
    "–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —ç–Ω–µ—Ä–≥–∏–∏": {
        "source": "–í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º–∞—è —ç–Ω–µ—Ä–≥–∏—è",
        "custom_answer": None
    },
    "–∫–∞–∫ —Å–æ–∫—Ä–∞—Ç–∏—Ç—å —É–≥–ª–µ—Ä–æ–¥–Ω—ã–π —Å–ª–µ–¥": {
        "custom_answer": """–°–ø–æ—Å–æ–±—ã —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è:
1. –õ–µ—Ç–∞–π—Ç–µ –º–µ–Ω—å—à–µ - –≤—ã–±–∏—Ä–∞–π—Ç–µ –ø–æ–µ–∑–¥–∞
2. –≠–∫–æ–Ω–æ–º—å—Ç–µ —ç–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–∏—é
3. –ü–æ–∫—É–ø–∞–π—Ç–µ –º–µ—Å—Ç–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
4. –£–º–µ–Ω—å—à–∏—Ç–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –º—è—Å–∞
5. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–Ω–æ–≥–æ—Ä–∞–∑–æ–≤—ã–µ –≤–µ—â–∏ –≤–º–µ—Å—Ç–æ –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã—Ö"""
    },
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ–º—ã
    "–æ–∑–æ–Ω–æ–≤—ã–µ –¥—ã—Ä—ã": {
        "source": "–û–∑–æ–Ω–æ–≤–∞—è –¥—ã—Ä–∞",
        "custom_answer": None
    },
    "–∫–∏–æ—Ç—Å–∫–∏–π –ø—Ä–æ—Ç–æ–∫–æ–ª": {
        "source": "–ö–∏–æ—Ç—Å–∫–∏–π –ø—Ä–æ—Ç–æ–∫–æ–ª",
        "custom_answer": None
    },
    "–ø–∞—Ä–∏–∂—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ": {
        "source": "–ü–∞—Ä–∏–∂—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ",
        "custom_answer": None
    },
    "—ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏": {
        "custom_answer": """–ò–∑–≤–µ—Å—Ç–Ω—ã–µ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏:
‚Ä¢ Greenpeace
‚Ä¢ –í—Å–µ–º–∏—Ä–Ω—ã–π —Ñ–æ–Ω–¥ –¥–∏–∫–æ–π –ø—Ä–∏—Ä–æ–¥—ã (WWF)
‚Ä¢ –ì—Ä–∏–Ω–ø–∏—Å
‚Ä¢ –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π —Å–æ—é–∑ –æ—Ö—Ä–∞–Ω—ã –ø—Ä–∏—Ä–æ–¥—ã
‚Ä¢ –û–û–ù-–û–∫—Ä—É–∂–∞—é—â–∞—è —Å—Ä–µ–¥–∞"""
    }
}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –≤–æ–ø—Ä–æ—Å–æ–≤"""
    welcome_text = """üåç –ü—Ä–∏–≤–µ—Ç! –Ø EcoLev_Bot. –ú–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ:
    
üîπ –ì–ª–æ–±–∞–ª—å–Ω–æ–º –ø–æ—Ç–µ–ø–ª–µ–Ω–∏–∏ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–ª–∏–º–∞—Ç–∞
üîπ –≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö –∏ —Ä–µ—à–µ–Ω–∏—è—Ö
üîπ –£—Å—Ç–æ–π—á–∏–≤–æ–º —Ä–∞–∑–≤–∏—Ç–∏–∏ –∏ –∑–∞—â–∏—Ç–µ –ø—Ä–∏—Ä–æ–¥—ã

–ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤:
‚Ä¢ –ß—Ç–æ —Ç–∞–∫–æ–µ –ø–∞—Ä–Ω–∏–∫–æ–≤—ã–π —ç—Ñ—Ñ–µ–∫—Ç?
‚Ä¢ –ö–∞–∫–æ–≤—ã –ø—Ä–∏—á–∏–Ω—ã –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏—è?
‚Ä¢ –ö–∞–∫ —Å–æ–∫—Ä–∞—Ç–∏—Ç—å —É–≥–ª–µ—Ä–æ–¥–Ω—ã–π —Å–ª–µ–¥?
‚Ä¢ –ö–∞–∫–∏–µ –µ—Å—Ç—å —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏?
‚Ä¢ –ö–∞–∫–∏–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏—è?
‚Ä¢ –ö–∞–∫–∏–µ —Å–ø–æ—Å–æ–±—ã —É–ª—É—á—à–µ–Ω–∏—è —ç–∫–æ–ª–æ–≥–∏–∏?
‚Ä¢ –∫–∞–∫ –±–æ—Ä–æ—Ç—å—Å—è —Å –≥–ª–æ–±–∞–ª—å–Ω—ã–º –ø–æ—Ç–µ–ø–ª–µ–Ω–∏–µ–º?

–¢–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É /image –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–∞–º—Ü–∏–µ–π –æ –≥–ª–æ–±–∞–ª—å–Ω–æ–º –ø–æ—Ç–µ–ø–ª–µ–Ω–∏–∏.

–ó–∞–¥–∞–π—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –æ —ç–∫–æ–ª–æ–≥–∏–∏ –∏–ª–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ–º –ø–æ—Ç–µ–ø–ª–µ–Ω–∏–∏!"""
    await update.message.reply_text(welcome_text)

async def image_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /image –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–∞–ø–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
    if not os.path.exists('images') or not os.path.isdir('images'):
        await update.message.reply_text("–ü–∞–ø–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ
    images = [f for f in os.listdir('images') if f.endswith(('.jpg', '.jpeg', '.png', '.gif'))]
    
    if not images:
        await update.message.reply_text("–í –ø–∞–ø–∫–µ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π!")
        return
    
    # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    random_image = random.choice(images)
    image_path = os.path.join('images', random_image)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    with open(image_path, 'rb') as photo:
        await update.message.reply_photo(photo)

def get_wikipedia_info(query: str) -> str:
    """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å Wikipedia"""
    try:
        url = f"https://ru.wikipedia.org/wiki/{query.replace(' ', '_')}"
        headers = {'User-Agent': 'Mozilla/5.0'}
        
        response = requests.get(url, headers=headers, timeout=10)
        response.raise_for_status()
        
        soup = BeautifulSoup(response.text, 'html.parser')
        
        # –ò—â–µ–º –ø–µ—Ä–≤—ã–π —Å–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω—ã–π –∞–±–∑–∞—Ü
        for p in soup.find_all('p'):
            text = p.get_text().strip()
            if text and len(text) > 100 and not p.find('sup'):
                return f"{text}\n\nüîó –ü–æ–¥—Ä–æ–±–Ω–µ–µ: {url}"
        
        return "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞, –Ω–æ —Ç–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π. –ß–∏—Ç–∞–π—Ç–µ –ø–æ–ª–Ω—É—é —Å—Ç–∞—Ç—å—é: {url}"
    
    except requests.exceptions.RequestException as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å Wikipedia."
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞."

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_message = update.message.text.lower()
    response = "–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è–ª –≤–∞—à –≤–æ–ø—Ä–æ—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–¥–∞—Ç—å –µ–≥–æ –∏–Ω–∞—á–µ."
    
    # –ü–æ–∏—Å–∫ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –æ—Ç–≤–µ—Ç–∞ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π
    for question, data in KNOWLEDGE_BASE.items():
        if question in user_message:
            if data['custom_answer']:
                response = data['custom_answer']
            else:
                response = get_wikipedia_info(data['source'])
            break
    
    await update.message.reply_text(response)

def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    application = Application.builder().token(token).build()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("image", image_command))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("EcoLev_Bot –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    application.run_polling()

if __name__ == '__main__':
    main()